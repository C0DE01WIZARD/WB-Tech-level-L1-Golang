// 8. Дана переменная int64. Разработать программу которая устанавливает i-й бит в 1 или 0.
// Маска для установки бита - это определенные данные, которые используются для выбора отдельных битов или полей из нескольких битов из двоичной строки или числа.

package main
import "fmt"


// Установка бита в определенное положение в числе
func setBit(num int64, pos, value int) int64 {
    if value == 1 {
       // Использовани побитовой операции "| ИЛИ" для установки бита в значение 1 
        return num | (1 << pos)
    }
		// Использование побитовой операции И (&) c отрицанием (^) для установки бита в значение 0
    return num &^ (1 << pos)
}

// Функция для вызова другой функции setBit с различными значениями и позициями битов.
func main() {
	fmt.Println("Exercise 08")
	//Переменная со значение 
    var num int64 = 4   
		// Вызываем функцию на различные значения позиции и бита для изменения num
		fmt.Println(setBit(num, 0, 0),"равно = 100")            
    fmt.Println(setBit(num, 0, 1), "равно = 101") 
		fmt.Println(setBit(num, 1, 0), "равно = 100") 
    fmt.Println(setBit(num, 1, 1), "равно = 110") 
		fmt.Println(setBit(num, 2, 0), "равно = 000") 
    fmt.Println(setBit(num, 2, 1), "равно = 100") 
    fmt.Println(setBit(num, 3, 1), "равно = 1100") 
}