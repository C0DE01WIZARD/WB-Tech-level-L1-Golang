// 9. Разработать конвейер чисел. Даны два канала: в первый пишутся числа (x) из массива, во второй — результат операции x*2, после чего данные из второго канала должны выводиться в stdout.

package main

import ("fmt")

func main() {
		fmt.Println("Exercise 08")
		// Массив данных x
		numbers := [] int {1,2,3,4,6}
	
		channel_1 := make(chan int, len(numbers)) // Канал для передачи данных из массива. 
		// Функция len(numbers) в данном коде используется для определения размера срезa numbers.Это необходимо для инициализации каналов channel_1 и channel_2. Каждый из этих каналов инициализируется с размером буфера, равным размеру среза. Избегание блокировок.
		channel_2 := make(chan int, len(numbers)) // Канал, куда передаются результат операции x*2 

		// выполняем итерацию по числам numbers и добавляем в канал значения в канал channel_1
		for _, number := range numbers{
					channel_1 <- number
		}
		// закрываем канал channel_1 для записи
		close(channel_1)

		// читаем значения из канала channel_1 и передаем результат операции x*2 во второй канал channel_2
		for ch2 := range channel_1{
					channel_2 <- ch2*2
		}

		// закрываем канал channel_2 для записи
		close(channel_2)
		// выводим результат добавления значений x*2 в переменной res 
		for res := range channel_2 {
						fmt.Println(res)
		}

}