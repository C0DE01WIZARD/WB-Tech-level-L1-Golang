// 19.Разработать программу, которая переворачивает подаваемую на ход строку (например: «главрыба — абырвалг»). Символы могут быть unicode.

// !!! В контексте языка программирования Go, "rune" является синонимом типа "int32" и представляет символ в кодировке Unicode

package main

import ("fmt"
	_"unicode/utf8" // Импортируем пакет для работы с Unicode-символами
)

// Создаём функцию reverseString для переворачивания строки. Возвращает строку.
	func reverseString(s string) string { 
		// Преобразуем строку в срез Unicode-символов.
			runes := []rune(s)
			// Инициализируем два индекса i, j для итерации по срезу runes
			for i, j := 0, len(runes)-1; //i инициализируется значением 0, j инициализируется значением len(runes)-1. Это конечный индекс !!! Итерация начинается с нуля !!!
			i < j; i, j = i+1, j-1 { // Проверяем условие i < j. Пока i меньше j, цикл будет выполняться.//После каждого цикла индексы i и j увеличиваются на единицу и уменьшаются на единицу. Это позволяет нам последовательно пройтись по всем элементам среза и перевернуть строку.
			runes[i], runes[j] = runes[j], runes[i] } // Меняем местами элементы среза runes с индексами i и j. Это нам позволяет перевернуть строку, перемещая каждый символ на одну позицию влево.
			
			return string(runes)  // Возвращаем строку, полученную из среза runes
	}
		
	func main() { 
			fmt.Println("Exercise19")

			//Вариант №1 
			var String1 string = "главрыба" 
			fmt.Println("Результат переворачивания строки 'главрыба' >",reverseString(String1)) // Выводим результат функции reverseString через переменную String

			//Вариант №2 с вводом строки через fmt.Scan
			var String2 string // Определяем переменную String2 без значения
			fmt.Printf("Введите строку:") // В консоли вводим значение строки
			fmt.Scan(&String2) // Через указатель передаём 
			fmt.Printf("Результат переворачивания строки\n", reverseString(String2)) // Выводим результат функции reverseString через переменную String2
		}